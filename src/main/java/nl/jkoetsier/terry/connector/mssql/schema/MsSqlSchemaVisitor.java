package nl.jkoetsier.terry.connector.mssql.schema;

import nl.jkoetsier.terry.connector.mssql.MsSqlIdentifierQuoter;
import nl.jkoetsier.terry.connector.ColumnDef;
import nl.jkoetsier.terry.connector.SqlIdentifierQuoter;
import nl.jkoetsier.terry.connector.SqlSchemaVisitor;
import nl.jkoetsier.terry.intrep.SqlQuery;
import nl.jkoetsier.terry.intrep.schema.Table;
import nl.jkoetsier.terry.intrep.schema.column.BooleanColumn;
import nl.jkoetsier.terry.intrep.schema.column.DateTimeTimezoneColumn;

public class MsSqlSchemaVisitor extends SqlSchemaVisitor {

  @Override
  public void visit(DateTimeTimezoneColumn dateTimeOffsetField) {
    columnDefStack.add(createColumnDef(dateTimeOffsetField, "DATETIMEOFFSET"));
  }

  @Override
  protected SqlIdentifierQuoter getIdentifierQuoter() {
    return new MsSqlIdentifierQuoter();
  }

  @Override
  public void visit(BooleanColumn booleanColumn) {
    columnDefStack.add(createColumnDef(booleanColumn, "BIT"));
  }

  @Override
  public void visit(Table table) {
    String createTable = String.format(
        "CREATE TABLE %s (", quoteIdentifier(table.getName())
    );

    for (ColumnDef columnDef : columnDefStack) {
      String arguments = "";

      if (columnDef.getArguments() != null) {
        arguments = String.format(
            "(%s)",
            String.join(", ", columnDef.getArguments())
        );
      }

      createTable = createTable.concat(String.format(
          "\n\t%s %s%s%s %s,",
          quoteIdentifier(columnDef.getName()),
          columnDef.getType(),
          arguments,
          columnDef.isAutoGenerated() ? " IDENTITY(1,1)" : "",
          columnDef.isNull() ? "NULL" : "NOT NULL"
      ));
    }

    if (table.getPrimaryKey() != null) {
      createTable = createTable.concat(String.format(
          "\n\tCONSTRAINT PK_%s PRIMARY KEY (\n\t\t%s\n\t)",
          table.getName(),
          String.join(",\n\t\t", quoteIdentifiers(table.getPrimaryKeyFieldNames()))
      ));
    } else if (createTable.charAt(createTable.length() - 1) == ',') {
      createTable = createTable.substring(0, createTable.length() - 1);
    }

    createTable = createTable.concat("\n)");

    createQueries.put(table.getName(), new SqlQuery(createTable));
    columnDefStack.clear();
  }
}
